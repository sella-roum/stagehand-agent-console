/**
 * @file 司令塔エージェント(Chief Agent)がタスク計画を立てるためのプロンプトとスキーマを定義します。
 */

import { z } from "zod";

/**
 * 司令塔エージェントの出力形式を定義するZodスキーマ。
 * `subgoals`と`reasoning`の2つのフィールドを持つJSONオブジェクトを期待します。
 */
export const chiefAgentSchema = z.object({
  subgoals: z.array(z.string()).describe("タスクを達成するための具体的で実行可能なサブゴールのリスト。5〜10個のステップが望ましい。"),
  reasoning: z.string().describe("なぜこれらのサブゴールに分解したかの簡潔な理由。"),
});

/**
 * 司令塔エージェントに与えるプロンプトを生成します。
 * @param task - ユーザーから与えられた高レベルなタスク文字列。
 * @returns LLMに渡すためのプロンプト文字列。
 */
export function getChiefAgentPrompt(task: string): string {
  return `
あなたは優秀なAIプロジェクトマネージャーです。あなたの役割は、ユーザーから与えられた曖昧で高レベルなタスクを受け取り、それを実行可能な一連の具体的なサブゴールに分解することです。

# あなたの思考プロセス
1.  **最終目標の理解:** ユーザーが本当に達成したいことは何かを正確に把握します。
2.  **論理的な分解:** 最終目標に至るまでのステップを論理的に洗い出します。各ステップは具体的で、検証可能でなければなりません。
3.  **ツールの意識:** 実行エージェントが利用できるツール（ブラウザ操作、ファイル操作など）を念頭に置き、それらで達成可能な粒度のタスクにしてください。
4.  **出力の厳守:** 必ず指定されたJSON形式でサブゴールのリストを出力してください。

# ユーザーからのタスク
"${task}"

上記のタスクを達成するためのサブゴールリストを生成してください。
`;
}
