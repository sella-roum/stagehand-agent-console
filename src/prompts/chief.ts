/**
 * @file 司令塔エージェント(Chief Agent)がタスク計画を立てるためのプロンプトとスキーマを定義します。
 */

import { z } from "zod";

/**
 * 司令塔エージェントの出力形式を定義するZodスキーマ。
 * `subgoals`と`reasoning`の2つのフィールドを持つJSONオブジェクトを期待します。
 */
export const chiefAgentSchema = z.object({
  subgoals: z
    .array(z.string())
    .describe(
      "タスクを達成するための具体的で実行可能なサブゴールのリスト。5〜10個のステップが望ましい。",
    ),
  reasoning: z
    .string()
    .describe("なぜこれらのサブゴールに分解したかの簡潔な理由。"),
});

/**
 * 司令塔エージェントに与える初期計画用のプロンプトを生成します。
 * @param task - ユーザーから与えられた高レベルなタスク文字列。
 * @returns LLMに渡すためのプロンプト文字列。
 */
export function getChiefAgentPrompt(task: string): string {
  return `
あなたは優秀なAIプロジェクトマネージャーです。あなたの役割は、ユーザーから与えられた曖昧で高レベルなタスクを受け取り、それを実行可能な一連の具体的なサブゴールに分解することです。

# あなたの思考プロセス
1.  **最終目標の理解:** ユーザーが本当に達成したいことは何かを正確に把握します。
2.  **論理的な分解:** 最終目標に至るまでのステップを論理的に洗い出します。各ステップは具体的で、検証可能でなければなりません。
3.  **ツールの意識:** 実行エージェントが利用できるツール（ブラウザ操作、ファイル操作など）を念頭に置き、それらで達成可能な粒度のタスクにしてください。
4.  **アクション指向:** 各サブゴールは、エージェントが実行すべき具体的な「行動」を記述するようにしてください。「情報を確認する」のような曖昧なものではなく、「ページからテキストを抽出する」「ボタンをクリックする」といった形にします。エージェントが既に知っている情報（例：現在のURL）を取得するだけのステップは不要です。
5.  **出力の厳守:** 必ず指定されたJSON形式でサブゴールのリストを出力してください。

# ユーザーからのタスク
"${task}"

上記のタスクを達成するためのサブゴールリストを生成してください。
`;
}

/**
 * getChiefAgentReplanPrompt関数のパラメータ型定義
 */
interface ReplanPromptParams {
  task: string;
  context: string;
  completedSubgoals: string[];
  failedSubgoal: string;
  errorContext: string;
}

/**
 * 司令塔エージェントに再計画を促すプロンプトを生成します。
 * @param params - 再計画に必要なパラメータを含むオブジェクト。
 * @returns LLMに渡すための再計画用プロンプト文字列。
 */
export function getChiefAgentReplanPrompt(params: ReplanPromptParams): string {
  const { task, context, completedSubgoals, failedSubgoal, errorContext } =
    params;
  return `
あなたは、予期せぬ事態に対応する能力に長けた、経験豊富なAIプロジェクトマネージャーです。
実行中のタスクがエラーにより停滞しています。現在の状況を分析し、最終目標を達成するための新しい計画を立て直してください。

# ユーザーの最終目標
"${task}"

# 現在の状況
${context}

# これまでに完了したサブゴール
${
  completedSubgoals.length > 0
    ? completedSubgoals.map((g, i) => `${i + 1}. ${g}`).join("\n")
    : "なし"
}

# 失敗したサブゴール
"${failedSubgoal}"

# 失敗の原因となったエラーの要約
${errorContext}

# あなたのタスク
1.  **状況分析:** なぜ元の計画が失敗したのかを分析してください。現在のページの状況が、当初の計画の前提と異なっている可能性があります。
2.  **再計画:** 上記の分析に基づき、**残りのタスクを達成するための新しいサブゴールリスト**を生成してください。
    - 完了済みのサブゴールを繰り返す必要はありません。
    - 失敗したサブゴールを別の角度から達成する方法を考えてください。
    - 場合によっては、全く異なるアプローチが必要になるかもしれません。
3.  **出力の厳守:** 必ず指定されたJSON形式で、新しいサブゴールのリストと、その計画に至った理由を出力してください。
`;
}
